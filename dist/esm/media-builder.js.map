{"version":3,"file":"media-builder.js","sourceRoot":"","sources":["../../src/media-builder.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,UAAU,CAAC;AAe5C,SAAS,mBAAmB,CAAI,QAAa,EAAE,YAAoB,QAAQ;IACvE,IAAI,CAAC,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;QAC3C,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;KACvD;IAED,MAAM,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;IAErC,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;QAC7C,MAAM,IAAI,KAAK,CAAC,mBAAmB,SAAS,aAAa,CAAC,CAAC;KAC9D;IAED,+DAA+D;IAC/D,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,OAAO,QAAQ,KAAK,SAAS,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;QAC/F,OAAO,QAAa,CAAC;KACxB;IAED,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;QAC9B,MAAM,IAAI,KAAK,CAAC,mBAAmB,SAAS,wBAAwB,CAAC,CAAC;KACzE;IAED,IAAI;QACA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAM,CAAC;KACpC;IAAC,WAAM;QACJ,0CAA0C;QAC1C,OAAO,QAAwB,CAAC;KACnC;AACL,CAAC;AAED,MAAM,UAAU,WAAW,CAAiC,SAAY,EAAC,YAA+C;IACtH,OAAO,gBAAgB,CAAC,WAAW,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;AAC/D,CAAC;AAGD,MAAM,CAAN,IAAY,mBAQX;AARD,WAAY,mBAAmB;IAC7B,8CAAsB,CAAA;IACtB,oCAAY,CAAA;IACZ,sCAAc,CAAA;IACd,wCAAgB,CAAA;IAChB,8CAAsB,CAAA;IACtB,4CAAoB,CAAA;IACpB,sDAA8B,CAAA;AAChC,CAAC,EARW,mBAAmB,KAAnB,mBAAmB,QAQ9B;AACD,MAAM,CAAN,IAAY,SAMX;AAND,WAAY,SAAS;IACnB,4BAAc,CAAA;IACd,4BAAc,CAAA;IACd,4BAAc,CAAA;IACd,wBAAU,CAAA;AAEZ,CAAC,EANW,SAAS,KAAT,SAAS,QAMpB;AACD,MAAM,CAAC,KAAK,UAAU,wBAAwB,CAAC,MAA4B;IACzE,IAAI,QAAQ,GAAG,MAAM,gBAAgB,CAAC,wBAAwB,CAAC,EAAE,MAAM,EAAG,MAAM,IAAI,EAAE,EAAC,CAAC,CAAC;IACzF,OAAO,mBAAmB,CAAc,QAAQ,EAAC,UAAU,CAAC,CAAC;AAC/D,CAAC;AAED,MAAM,YAAY,GAAwB,EAAE,CAAC;AAE7C,MAAM,CAAC,KAAK,UAAU,2BAA2B,CAAC,MAA4B,EAAE,SAA6B;IAC3G,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,0BAA0B;IACnD,gBAAgB,CAAC,2BAA2B,CAAC,EAAE,MAAM,EAAG,MAAM,IAAI,EAAE,EAAC,CAAC,CAAC;IACvE,gBAAgB,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE;QACjD,MAAM,OAAO,GAAG,mBAAmB,CAAc,IAAI,EAAE,UAAU,CAAC,CAAC;QACnE,IAAI,SAAS,IAAI,OAAO,SAAS,CAAC,UAAU,KAAK,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACrF,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACvB,MAAM,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;gBACpE,IAAI,YAAY,EAAE;oBAChB,0BAA0B;oBAC1B,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;iBACrC;qBAAM;oBACL,qCAAqC;oBACrC,MAAM,OAAO,GAAG,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC;oBAC9C,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC5B;YACH,CAAC,CAAC,CAAC;YACH,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SACpC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,2BAA2B,CAAC,EAAW,EAAE,SAA4B;IACzF,gBAAgB,CAAC,2BAA2B,CAAC,EAAE,EAAE,EAAG,EAAE,IAAI,EAAE,EAAC,CAAC,CAAC;IAC/D,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,0BAA0B;IACnD,gBAAgB,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,EAAE;QAC9C,MAAM,MAAM,GAAG,mBAAmB,CAAY,IAAI,EAAC,SAAS,CAAC,CAAC;QAC9D,IAAI,SAAS,IAAI,OAAO,SAAS,CAAC,UAAU,KAAK,UAAU,EAAE;YAC3D,MAAM,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;YAC5E,IAAI,YAAY,EAAE;gBAChB,0BAA0B;gBAC1B,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;gBACpC,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;gBACnC,OAAO;aACR;iBAAI;gBACH,MAAM,OAAO,GAAG,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC;gBAC9C,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3B,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAC/B;SACF;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,wBAAwB,CAAC,EAAW;IACxD,IAAI,QAAQ,GAAG,MAAM,gBAAgB,CAAC,wBAAwB,CAAC,EAAE,EAAE,EAAG,EAAE,IAAI,EAAE,EAAC,CAAC,CAAC;IACjF,OAAO,mBAAmB,CAAY,QAAQ,EAAC,SAAS,CAAC,CAAC;AAC5D,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,MAAM,CAAC,GAAwB,EAAC,IAAa,EAAE,QAAiB,EAAE,IAAgB,EAAC,SAAmB;IAC1H,IAAI,QAAQ,GAAG,MAAM,gBAAgB,CAAC,MAAM,CAAC,EAAE,GAAG,EAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAC,SAAS,EAAG,SAAS,EAAE,CAAC,CAAC;IAC1K,OAAO,mBAAmB,CAAe,QAAQ,EAAC,UAAU,CAAC,CAAC;AAChE,CAAC;AAGD,MAAM,OAAO,YAAY;IASvB,YAAY,QAAgB;QAPpB,cAAS,GAAwB,IAAI,GAAG,EAAE,CAAC;QAC3C,SAAI,GAAwB,IAAI,GAAG,EAAE,CAAC;QAEtC,cAAS,GAA2B,EAAE,CAAC;QAEvC,cAAS,GAAY,KAAK,CAAC;QAGjC,IAAI,CAAC,QAAQ,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QACD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,GAAW,EAAE,KAAa;QAC/B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,WAAW,CAAC,GAAW,EAAE,KAAa;QACpC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,CAAC,GAAW;QACnB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAc,CAAC,GAAW;QACxB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,YAAY,CAAC,SAAkB;QAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,eAAe,CAAC,GAAwB;QAC9C,MAAM,GAAG,GAA8B,EAAE,CAAC;QAC1C,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;YACzB,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACb,CAAC;IAED,KAAK,CAAC,KAAK;QACT,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAEtE,MAAM,QAAQ,GAAG,MAAM,gBAAgB,CAAC,YAAY,CAAC;YACnD,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,GAAG;YACH,QAAQ;YACR,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,MAAM;QACV,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QACzE,MAAM,GAAG,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5E,OAAO,GAAG,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,MAAM;QACV,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QACzE,MAAM,GAAG,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5E,OAAO,GAAG,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,KAAK;QACT,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QACzE,MAAM,GAAG,GAAG,MAAM,gBAAgB,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;QAC3E,OAAO,GAAG,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,MAAM;QACV,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QACzE,MAAM,GAAG,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5E,OAAO,GAAG,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,SAA0B;QACrC,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QAEzE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;QAE3C,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,WAAW,CACnD,YAAY,EACZ,CAAC,KAA0B,EAAE,EAAE;YAC7B,IAAI,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,eAAe,IAAI,SAAS,CAAC,UAAU,EAAE;gBAC7D,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aAC7B;QACH,CAAC,CACF,CAAC;QAEF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,WAAW,CACnD,YAAY,EACZ,CAAC,KAA8B,EAAE,EAAE;YACjC,IAAI,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,eAAe,IAAI,SAAS,CAAC,UAAU,EAAE;gBAC7D,IAAI,OAAO,KAAK,CAAC,QAAQ,KAAK,QAAQ;oBAAE,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACpF,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ;oBAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACxE,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aAC7B;YACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CACF,CAAC;QAEF,MAAM,OAAO,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAChD,SAAS,EACT,CAAC,KAAuB,EAAE,EAAE;YAC1B,IAAI,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,eAAe,IAAI,SAAS,CAAC,OAAO,EAAE;gBAC1D,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC1B;YACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QAErD,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;QAC/E,OAAO,MAAM,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;IACnC,CAAC;CACF;AAGD,MAAM,OAAO,iBAAiB;IAgB1B,YAAY,IAAe;QAiBrB,cAAS,GAA2B,EAAE,CAAC;QAhBzC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACpD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IAC1C,CAAC;IAEH,KAAK,CAAC,MAAM;QACV,IAAI,CAAC,IAAI,CAAC,EAAE;YAAE,OAAO,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QAChE,MAAM,GAAG,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAChE,OAAO,GAAG,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,MAAM;QACV,IAAI,CAAC,IAAI,CAAC,EAAE;YAAE,OAAO,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QAChE,MAAM,GAAG,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAChE,OAAO,GAAG,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,KAAK;QACT,IAAI,CAAC,IAAI,CAAC,EAAE;YAAE,OAAO,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QAChE,MAAM,GAAG,GAAG,MAAM,gBAAgB,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAC/D,OAAO,GAAG,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,MAAM;QACV,IAAI,CAAC,IAAI,CAAC,EAAE;YAAE,OAAO,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QAChE,MAAM,GAAG,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAChE,OAAO,GAAG,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,SAA0B;QACrC,IAAI,CAAC,IAAI,CAAC,EAAE;YAAE,OAAO,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QAEhE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,WAAW,CACnD,YAAY,EACZ,CAAC,KAA0B,EAAE,EAAE;YAC7B,IAAI,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAI,SAAS,CAAC,UAAU,EAAE;gBAChD,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aAC7B;QACH,CAAC,CACF,CAAC;QAEF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,WAAW,CACnD,YAAY,EACZ,CAAC,KAA8B,EAAE,EAAE;YACjC,IAAI,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAI,SAAS,CAAC,UAAU,EAAE;gBAChD,IAAI,OAAO,KAAK,CAAC,QAAQ,KAAK,QAAQ;oBAAE,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACpF,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ;oBAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACxE,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aAC7B;YACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CACF,CAAC;QAEF,MAAM,OAAO,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAChD,SAAS,EACT,CAAC,KAAuB,EAAE,EAAE;YAC1B,IAAI,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAI,SAAS,CAAC,OAAO,EAAE;gBAC7C,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC1B;YACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QAErD,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACnE,OAAO,MAAM,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;CACF","sourcesContent":["import { TruvideoSdkMedia } from './plugin';\n\nimport { PluginListenerHandle } from '@capacitor/core';\nimport {\n  UploadCallbacks,\n  UploadCompleteEventData,\n  UploadErrorEvent,\n  UploadProgressEvent,\n  MediaData,\n  MediaEventMap,\n  SearchData,\n  RequestsCallback,\n  RequestCallback,\n} from './index';\n\nfunction parsePluginResponse<T>(response: any, valueName: string = \"result\"): T {\n    if (!response || typeof response !== \"object\") {\n        throw new Error(\"Plugin response is not an object\");\n    }\n\n    const rawValue = response[valueName];\n\n    if (rawValue === undefined || rawValue === null) {\n        throw new Error(`Plugin response.${valueName} is missing`);\n    }\n\n    // If it's already an object or boolean/number, return directly\n    if (typeof rawValue === \"object\" || typeof rawValue === \"boolean\" || typeof rawValue === \"number\") {\n        return rawValue as T;\n    }\n\n    if (typeof rawValue !== \"string\") {\n        throw new Error(`Plugin response.${valueName} is not a valid string`);\n    }\n\n    try {\n        return JSON.parse(rawValue) as T;\n    } catch {\n        // If parsing fails, return the raw string\n        return rawValue as unknown as T;\n    }\n}\n\nexport function addListener<K extends keyof MediaEventMap>( eventName: K,listenerFunc: (event: MediaEventMap[K]) => void): Promise<PluginListenerHandle>{\n  return TruvideoSdkMedia.addListener(eventName, listenerFunc);\n}\n\n\nexport enum UploadRequestStatus {\n  UPLOADING =\"UPLOADING\",\n  IDLE =\"IDLE\",\n  ERROR =\"ERROR\",\n  PAUSED =\"PAUSED\",\n  COMPLETED =\"COMPLETED\",\n  CANCELED =\"CANCELED\",\n  SYNCHRONIZING =\"SYNCHRONIZING\",\n}\nexport enum MediaType {\n  IMAGE =\"Image\",\n  VIDEO =\"Video\",\n  AUDIO =\"AUDIO\",\n  PDF =\"PDF\",\n  \n}\nexport async function getAllFileUploadRequests(status?: UploadRequestStatus): Promise<MediaData[]> {\n  let response = await TruvideoSdkMedia.getAllFileUploadRequests({ status : status || ''});\n  return parsePluginResponse<MediaData[]>(response,\"requests\");\n}\n\nconst mediaRequest: MediaRequestClass[] = [];\n\nexport async function streamAllFileUploadRequests(status?: UploadRequestStatus, callbacks? : RequestsCallback) {\n  mediaRequest.length = 0; // Clear previous requests\n  TruvideoSdkMedia.streamAllFileUploadRequests({ status : status || ''});\n  TruvideoSdkMedia.addListener('AllStream', (data) => {\n    const results = parsePluginResponse<MediaData[]>(data, \"requests\");\n    if (callbacks && typeof callbacks.onComplete === \"function\" && Array.isArray(results)) {\n      results.forEach(result => {\n        const requestFound = mediaRequest.find(req => req.id === result.id);\n        if (requestFound) {\n          // Update existing request\n          Object.assign(requestFound, result);\n        } else {\n          // Create new request and add to list\n          const request = new MediaRequestClass(result);\n          mediaRequest.push(request);\n        }\n      });\n      callbacks.onComplete(mediaRequest);\n    }\n  });\n}\n\nexport async function streamFileUploadRequestById(id?: string, callbacks? : RequestCallback) {\n  TruvideoSdkMedia.streamFileUploadRequestById({ id : id || ''});\n  mediaRequest.length = 0; // Clear previous requests\n  TruvideoSdkMedia.addListener('stream', (data) => {\n    const result = parsePluginResponse<MediaData>(data,\"request\");\n    if (callbacks && typeof callbacks.onComplete === 'function') {\n      const requestFound = mediaRequest.find(request => request.id === result.id);\n      if (requestFound) {\n        // Update existing request\n        Object.assign(requestFound, result);\n        callbacks.onComplete(requestFound);\n        return;\n      }else{\n        const request = new MediaRequestClass(result); \n        mediaRequest.push(request);\n        callbacks.onComplete(request);\n      }\n    }\n  });\n} \n\nexport async function getFileUploadRequestById(id : string): Promise<MediaData> {\n  let response = await TruvideoSdkMedia.getFileUploadRequestById({ id : id || ''});\n  return parsePluginResponse<MediaData>(response,\"request\");\n}\n\nexport async function search(tag : Map<string,string>,page : Number, pageSize : Number ,type : MediaType,isLibrary : boolean): Promise<SearchData[]> {\n  let response = await TruvideoSdkMedia.search({ tag : JSON.stringify(tag) || '', type: type, page: page.toString(), pageSize: pageSize.toString(),isLibrary : isLibrary });\n  return parsePluginResponse<SearchData[]>(response,\"response\");\n}\n\n\nexport class MediaBuilder {\n  private _filePath: string;\n  private _metaData: Map<string, string> = new Map();\n  private _tag: Map<string, string> = new Map();\n  mediaDetail: MediaData | undefined;\n  private listeners: PluginListenerHandle[] = [];\n  private currentUploadId: string | undefined;\n  private isLibrary: boolean = false;\n\n  constructor(filePath: string) {\n    if (!filePath) {\n      throw new Error('filePath is required for MediaBuilder.');\n    }\n    this._filePath = filePath;\n  }\n\n  setTag(key: string, value: string): MediaBuilder {\n    this._tag.set(key, value);\n    return this;\n  }\n\n  getTag(): Map<string, string> {\n    return this._tag;\n  }\n\n  setMetaData(key: string, value: string): MediaBuilder {\n    this._metaData.set(key, value);\n    return this;\n  }\n\n  getMetaData(): Map<string, string> {\n    return this._metaData;\n  }\n\n  clearTags(): MediaBuilder {\n    this._tag.clear();\n    return this;\n  }\n\n  deleteTag(key: string): MediaBuilder {\n    this._tag.delete(key);\n    return this;\n  }\n\n  deleteMetaData(key: string): MediaBuilder {\n    this._metaData.delete(key);\n    return this;\n  }\n\n  clearMetaDatas(): MediaBuilder {\n    this._metaData.clear();\n    return this;\n  }\n  setIsLibrary(isLibrary: boolean): MediaBuilder {\n    this.isLibrary = isLibrary;\n    return this;\n  }\n\n  private mapToJsonObject(map: Map<string, string>): { [key: string]: string } {\n    const obj: { [key: string]: string } = {};\n    map.forEach((value, key) => {\n      obj[key] = value;\n    });\n    return obj;\n  }\n\n  async build(): Promise<MediaBuilder> {\n    const tag = JSON.stringify(this.mapToJsonObject(this._tag));\n    const metaData = JSON.stringify(this.mapToJsonObject(this._metaData));\n\n    const response = await TruvideoSdkMedia.mediaBuilder({\n      filePath: this._filePath,\n      tag,\n      metaData,\n      isLibrary: this.isLibrary,\n    }); \n\n    this.mediaDetail = JSON.parse(response.value);\n    return this;\n  }\n\n  async cancel(): Promise<string> {\n    if (!this.mediaDetail) return Promise.reject('mediaDetail is undefined');\n    const res = await TruvideoSdkMedia.cancelMedia({ id: this.mediaDetail.id });\n    return res.value;\n  }\n\n  async delete(): Promise<string> {\n    if (!this.mediaDetail) return Promise.reject('mediaDetail is undefined');\n    const res = await TruvideoSdkMedia.deleteMedia({ id: this.mediaDetail.id });\n    return res.value;\n  }\n\n  async pause(): Promise<string> {\n    if (!this.mediaDetail) return Promise.reject('mediaDetail is undefined');\n    const res = await TruvideoSdkMedia.pauseMedia({ id: this.mediaDetail.id });\n    return res.value;\n  }\n\n  async resume(): Promise<string> {\n    if (!this.mediaDetail) return Promise.reject('mediaDetail is undefined');\n    const res = await TruvideoSdkMedia.resumeMedia({ id: this.mediaDetail.id });\n    return res.value;\n  }\n\n  async upload(callbacks: UploadCallbacks): Promise<string> {\n    if (!this.mediaDetail) return Promise.reject('mediaDetail is undefined');\n\n    this.removeEventListeners();\n    this.currentUploadId = this.mediaDetail.id;\n\n    const onProgress = await TruvideoSdkMedia.addListener(\n      'onProgress',\n      (event: UploadProgressEvent) => {\n        if (event.id === this.currentUploadId && callbacks.onProgress) {\n          callbacks.onProgress(event);\n        }\n      }\n    );\n\n    const onComplete = await TruvideoSdkMedia.addListener(\n      'onComplete',\n      (event: UploadCompleteEventData) => {\n        if (event.id === this.currentUploadId && callbacks.onComplete) {\n          if (typeof event.metaData === 'string') event.metaData = JSON.parse(event.metaData);\n          if (typeof event.tags === 'string') event.tags = JSON.parse(event.tags);\n          callbacks.onComplete(event);\n        }\n        this.removeEventListeners();\n      }\n    );\n\n    const onError = await TruvideoSdkMedia.addListener(\n      'onError',\n      (event: UploadErrorEvent) => {\n        if (event.id === this.currentUploadId && callbacks.onError) {\n          callbacks.onError(event);\n        }\n        this.removeEventListeners();\n      }\n    );\n\n    this.listeners.push(onProgress, onComplete, onError);\n\n    const result = await TruvideoSdkMedia.uploadMedia({ id: this.mediaDetail.id });\n    return result.value;\n  }\n\n  removeEventListeners(): void {\n    this.listeners.forEach((listener) => listener.remove());\n    this.listeners = [];\n    this.currentUploadId = undefined;\n  }\n}\n\n\nexport class MediaRequestClass {\n    id: string;\n    filePath: string;\n    fileType: string;\n    durationMilliseconds: number;\n    remoteId: string;\n    remoteURL: string;\n    transcriptionURL: string;\n    transcriptionLength: number;\n    status: string;\n    progress: number;\n    tags : any;\n    metaData : any;\n    createdAt: string;\n    updatedAt: string;\n    errorMessage : string;   \n    constructor(data: MediaData) {\n        this.id = data.id;\n        this.filePath = data.filePath;\n        this.fileType = data.fileType;\n        this.durationMilliseconds = data.durationMilliseconds;\n        this.remoteId = data.remoteId;\n        this.remoteURL = data.remoteURL;\n        this.transcriptionURL = data.transcriptionURL;\n        this.transcriptionLength = data.transcriptionLength;\n        this.status = data.status;\n        this.progress = data.progress;\n        this.tags = data.tags;\n        this.metaData = data.metaData;\n        this.createdAt = data.createdAt;\n        this.updatedAt = data.updatedAt;\n        this.errorMessage = data.errorMessage;\n    }\n  private listeners: PluginListenerHandle[] = [];\n  async cancel(): Promise<string> {\n    if (!this.id) return Promise.reject('mediaDetail is undefined');\n    const res = await TruvideoSdkMedia.cancelMedia({ id: this.id });\n    return res.value;\n  }\n\n  async delete(): Promise<string> {\n    if (!this.id) return Promise.reject('mediaDetail is undefined');\n    const res = await TruvideoSdkMedia.deleteMedia({ id: this.id });\n    return res.value;\n  }\n\n  async pause(): Promise<string> {\n    if (!this.id) return Promise.reject('mediaDetail is undefined');\n    const res = await TruvideoSdkMedia.pauseMedia({ id: this.id });\n    return res.value;\n  }\n\n  async resume(): Promise<string> {\n    if (!this.id) return Promise.reject('mediaDetail is undefined');\n    const res = await TruvideoSdkMedia.resumeMedia({ id: this.id });\n    return res.value;\n  }\n\n  async upload(callbacks: UploadCallbacks): Promise<string> {\n    if (!this.id) return Promise.reject('mediaDetail is undefined');\n\n    this.removeEventListeners();\n  \n    const onProgress = await TruvideoSdkMedia.addListener(\n      'onProgress',\n      (event: UploadProgressEvent) => {\n        if (event.id === this.id && callbacks.onProgress) {\n          callbacks.onProgress(event);\n        }\n      }\n    );\n\n    const onComplete = await TruvideoSdkMedia.addListener(\n      'onComplete',\n      (event: UploadCompleteEventData) => {\n        if (event.id === this.id && callbacks.onComplete) {\n          if (typeof event.metaData === 'string') event.metaData = JSON.parse(event.metaData);\n          if (typeof event.tags === 'string') event.tags = JSON.parse(event.tags);\n          callbacks.onComplete(event);\n        }\n        this.removeEventListeners();\n      }\n    );\n\n    const onError = await TruvideoSdkMedia.addListener(\n      'onError',\n      (event: UploadErrorEvent) => {\n        if (event.id === this.id && callbacks.onError) {\n          callbacks.onError(event);\n        }\n        this.removeEventListeners();\n      }\n    );\n\n    this.listeners.push(onProgress, onComplete, onError);\n\n    const result = await TruvideoSdkMedia.uploadMedia({ id: this.id });\n    return result.value;\n  }\n\n  removeEventListeners(): void {\n    this.listeners.forEach((listener) => listener.remove());\n    this.listeners = [];\n  }\n}\n"]}