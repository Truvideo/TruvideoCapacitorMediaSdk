{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from \"@capacitor/core\";\nimport { MediaEventMap } from \"./helper\";\n\n\nexport interface TruvideoSdkMediaPlugin {\n    echo(options: { value: string }): Promise<{ value: string }>;\n\n    // New Methods\n    mediaBuilder(options: {\n        filePath: string;\n        tag: string;\n        metaData: string;\n    }): Promise<{ value: string }>;\n\n    getFileUploadRequestById(options: { id: string }): Promise<string>;\n\n    getAllFileUploadRequests(options: { status: string }): Promise<string>;\n\n    cancelMedia(options: { id: string }): Promise<{ value: string }>;\n\n    deleteMedia(options: { id: string }): Promise<{ value: string }>;\n\n    pauseMedia(options: { id: string }): Promise<{ value: string }>;\n\n    resumeMedia(options: { id: string }): Promise<{ value: string }>;\n\n    uploadMedia(options: { id: string }): Promise<{ value: string }>;\n\n    search(options: {\n        tag: string;\n        type: string;\n        isLibrary: boolean;\n        page: string;\n        pageSize: string;\n    }): Promise<{ value: string }>;\n\n    addListener<K extends keyof MediaEventMap>(\n        eventName: K,\n        listenerFunc: (event: MediaEventMap[K]) => void\n    ): Promise<PluginListenerHandle>;\n}\n"]}